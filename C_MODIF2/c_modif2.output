Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: ';'
    5     | expr ';'
    6     | WRITELN expr ';'
    7     | VARIABLE '=' expr ';'
    8     | VARIABLE '=' expr ','
    9     | WHILE '(' expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | DO stmt WHILE '(' expr ')' ';'
   13     | '{' stmt_list '}'
   14     | SWITCH '(' expr ')' '{' case_list '}'

   15 stmt_list: stmt
   16          | stmt_list stmt

   17 case_list: case
   18          | case_list case

   19 case: CASE expr ':' stmt_list BREAK ';'
   20     | DEFAULT ':' stmt_list BREAK ';'
   21     | DEFAULT ':' stmt_list
   22     | CASE expr ':' BREAK ';'
   23     | DEFAULT ':' BREAK ';'

   24 expr: INTEGER
   25     | FLOAT
   26     | VARIABLE
   27     | '-' expr
   28     | expr '+' expr
   29     | expr '-' expr
   30     | expr '*' expr
   31     | expr '/' expr
   32     | expr '%' expr
   33     | expr '<' expr
   34     | expr '>' expr
   35     | expr GE expr
   36     | expr LE expr
   37     | expr NE expr
   38     | expr EQ expr
   39     | expr INCREMENT
   40     | expr DECREMENT
   41     | INCREMENT expr
   42     | DECREMENT expr
   43     | expr ADD_ASSIGN expr
   44     | expr SUB_ASSIGN expr
   45     | expr MUL_ASSIGN expr
   46     | expr DIV_ASSIGN expr
   47     | '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 9 10 11 12 14 47
    ')' (41) 9 10 11 12 14 47
    '*' (42) 30
    '+' (43) 28
    ',' (44) 8
    '-' (45) 27 29
    '/' (47) 31
    ':' (58) 19 20 21 22 23
    ';' (59) 4 5 6 7 12 19 20 22 23
    '<' (60) 33
    '=' (61) 7 8
    '>' (62) 34
    '{' (123) 13 14
    '}' (125) 13 14
    error (256)
    INTEGER <iValue> (258) 24
    FLOAT <fValue> (259) 25
    VARIABLE <sIndex> (260) 7 8 26
    DO (261) 12
    WHILE (262) 9 12
    IF (263) 10 11
    WRITELN (264) 6
    INCREMENT (265) 39 41
    DECREMENT (266) 40 42
    ADD_ASSIGN (267) 43
    SUB_ASSIGN (268) 44
    MUL_ASSIGN (269) 45
    DIV_ASSIGN (270) 46
    SWITCH (271) 14
    BREAK (272) 19 20 22 23
    CASE (273) 19 22
    DEFAULT (274) 20 21 23
    IFX (275)
    ELSE (276) 11
    GE (277) 35
    LE (278) 36
    EQ (279) 38
    NE (280) 37
    UMINUS (281)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    function (44)
        on left: 2 3
        on right: 1 2
    stmt <nPtr> (45)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 9 10 11 12 15 16
    stmt_list <nPtr> (46)
        on left: 15 16
        on right: 13 16 19 20 21
    case_list <nPtr> (47)
        on left: 17 18
        on right: 14 18
    case <nPtr> (48)
        on left: 19 20 21 22 23
        on right: 17 18
    expr <nPtr> (49)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 5 6 7 8 9 10 11 12 14 19 22 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    $default  reduce using rule 1 (program)

    stmt  go to state 18
    expr  go to state 19


State 3

    0 $accept: program $end .

    $default  accept


State 4

   24 expr: INTEGER .

    $default  reduce using rule 24 (expr)


State 5

   25 expr: FLOAT .

    $default  reduce using rule 25 (expr)


State 6

    7 stmt: VARIABLE . '=' expr ';'
    8     | VARIABLE . '=' expr ','
   26 expr: VARIABLE .

    '='  shift, and go to state 20

    $default  reduce using rule 26 (expr)


State 7

   12 stmt: DO . stmt WHILE '(' expr ')' ';'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt  go to state 21
    expr  go to state 19


State 8

    9 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 22


State 9

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 23


State 10

    6 stmt: WRITELN . expr ';'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 25


State 11

   41 expr: INCREMENT . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 26


State 12

   42 expr: DECREMENT . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 27


State 13

   14 stmt: SWITCH . '(' expr ')' '{' case_list '}'

    '('  shift, and go to state 28


State 14

   27 expr: '-' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 29


State 15

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


State 16

   47 expr: '(' . expr ')'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 30


State 17

   13 stmt: '{' . stmt_list '}'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt       go to state 31
    stmt_list  go to state 32
    expr       go to state 19


State 18

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 19

    5 stmt: expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ';'         shift, and go to state 50


State 20

    7 stmt: VARIABLE '=' . expr ';'
    8     | VARIABLE '=' . expr ','

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 51


State 21

   12 stmt: DO stmt . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 52


State 22

    9 stmt: WHILE '(' . expr ')' stmt

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 53


State 23

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 54


State 24

   26 expr: VARIABLE .

    $default  reduce using rule 26 (expr)


State 25

    6 stmt: WRITELN expr . ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ';'         shift, and go to state 55


State 26

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   41     | INCREMENT expr .
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   error (nonassociative)
    DECREMENT   error (nonassociative)
    ADD_ASSIGN  error (nonassociative)
    SUB_ASSIGN  error (nonassociative)
    MUL_ASSIGN  error (nonassociative)
    DIV_ASSIGN  error (nonassociative)

    $default  reduce using rule 41 (expr)


State 27

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   42     | DECREMENT expr .
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   error (nonassociative)
    DECREMENT   error (nonassociative)
    ADD_ASSIGN  error (nonassociative)
    SUB_ASSIGN  error (nonassociative)
    MUL_ASSIGN  error (nonassociative)
    DIV_ASSIGN  error (nonassociative)

    $default  reduce using rule 42 (expr)


State 28

   14 stmt: SWITCH '(' . expr ')' '{' case_list '}'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 56


State 29

   27 expr: '-' expr .
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38

    $default  reduce using rule 27 (expr)


State 30

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | '(' expr . ')'

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ')'         shift, and go to state 57


State 31

   15 stmt_list: stmt .

    $default  reduce using rule 15 (stmt_list)


State 32

   13 stmt: '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17
    '}'        shift, and go to state 58

    stmt  go to state 59
    expr  go to state 19


State 33

   39 expr: expr INCREMENT .

    $default  reduce using rule 39 (expr)


State 34

   40 expr: expr DECREMENT .

    $default  reduce using rule 40 (expr)


State 35

   43 expr: expr ADD_ASSIGN . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 60


State 36

   44 expr: expr SUB_ASSIGN . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 61


State 37

   45 expr: expr MUL_ASSIGN . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 62


State 38

   46 expr: expr DIV_ASSIGN . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 63


State 39

   35 expr: expr GE . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 64


State 40

   36 expr: expr LE . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 65


State 41

   38 expr: expr EQ . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 66


State 42

   37 expr: expr NE . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 67


State 43

   34 expr: expr '>' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 68


State 44

   33 expr: expr '<' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 69


State 45

   28 expr: expr '+' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 70


State 46

   29 expr: expr '-' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 71


State 47

   30 expr: expr '*' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 72


State 48

   31 expr: expr '/' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 73


State 49

   32 expr: expr '%' . expr

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 74


State 50

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 51

    7 stmt: VARIABLE '=' expr . ';'
    8     | VARIABLE '=' expr . ','
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ';'         shift, and go to state 75
    ','         shift, and go to state 76


State 52

   12 stmt: DO stmt WHILE . '(' expr ')' ';'

    '('  shift, and go to state 77


State 53

    9 stmt: WHILE '(' expr . ')' stmt
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ')'         shift, and go to state 78


State 54

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ')'         shift, and go to state 79


State 55

    6 stmt: WRITELN expr ';' .

    $default  reduce using rule 6 (stmt)


State 56

   14 stmt: SWITCH '(' expr . ')' '{' case_list '}'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ')'         shift, and go to state 80


State 57

   47 expr: '(' expr ')' .

    $default  reduce using rule 47 (expr)


State 58

   13 stmt: '{' stmt_list '}' .

    $default  reduce using rule 13 (stmt)


State 59

   16 stmt_list: stmt_list stmt .

    $default  reduce using rule 16 (stmt_list)


State 60

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   43     | expr ADD_ASSIGN expr .
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   error (nonassociative)
    DECREMENT   error (nonassociative)
    ADD_ASSIGN  error (nonassociative)
    SUB_ASSIGN  error (nonassociative)
    MUL_ASSIGN  error (nonassociative)
    DIV_ASSIGN  error (nonassociative)

    $default  reduce using rule 43 (expr)


State 61

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   44     | expr SUB_ASSIGN expr .
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   error (nonassociative)
    DECREMENT   error (nonassociative)
    ADD_ASSIGN  error (nonassociative)
    SUB_ASSIGN  error (nonassociative)
    MUL_ASSIGN  error (nonassociative)
    DIV_ASSIGN  error (nonassociative)

    $default  reduce using rule 44 (expr)


State 62

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   45     | expr MUL_ASSIGN expr .
   46     | expr . DIV_ASSIGN expr

    INCREMENT   error (nonassociative)
    DECREMENT   error (nonassociative)
    ADD_ASSIGN  error (nonassociative)
    SUB_ASSIGN  error (nonassociative)
    MUL_ASSIGN  error (nonassociative)
    DIV_ASSIGN  error (nonassociative)

    $default  reduce using rule 45 (expr)


State 63

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   46     | expr DIV_ASSIGN expr .

    INCREMENT   error (nonassociative)
    DECREMENT   error (nonassociative)
    ADD_ASSIGN  error (nonassociative)
    SUB_ASSIGN  error (nonassociative)
    MUL_ASSIGN  error (nonassociative)
    DIV_ASSIGN  error (nonassociative)

    $default  reduce using rule 46 (expr)


State 64

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   35     | expr GE expr .
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 35 (expr)


State 65

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   36     | expr LE expr .
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 36 (expr)


State 66

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   38     | expr EQ expr .
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 38 (expr)


State 67

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   37     | expr NE expr .
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 37 (expr)


State 68

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   34     | expr '>' expr .
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 34 (expr)


State 69

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   33     | expr '<' expr .
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 33 (expr)


State 70

   28 expr: expr . '+' expr
   28     | expr '+' expr .
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 28 (expr)


State 71

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   29     | expr '-' expr .
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49

    $default  reduce using rule 29 (expr)


State 72

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   30     | expr '*' expr .
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '%'         shift, and go to state 49

    $default  reduce using rule 30 (expr)


State 73

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   31     | expr '/' expr .
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    '%'         shift, and go to state 49

    $default  reduce using rule 31 (expr)


State 74

   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   32     | expr '%' expr .
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38

    $default  reduce using rule 32 (expr)


State 75

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 76

    8 stmt: VARIABLE '=' expr ',' .

    $default  reduce using rule 8 (stmt)


State 77

   12 stmt: DO stmt WHILE '(' . expr ')' ';'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 81


State 78

    9 stmt: WHILE '(' expr ')' . stmt

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt  go to state 82
    expr  go to state 19


State 79

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt  go to state 83
    expr  go to state 19


State 80

   14 stmt: SWITCH '(' expr ')' . '{' case_list '}'

    '{'  shift, and go to state 84


State 81

   12 stmt: DO stmt WHILE '(' expr . ')' ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ')'         shift, and go to state 85


State 82

    9 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 9 (stmt)


State 83

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 86

    $default  reduce using rule 10 (stmt)


State 84

   14 stmt: SWITCH '(' expr ')' '{' . case_list '}'

    CASE     shift, and go to state 87
    DEFAULT  shift, and go to state 88

    case_list  go to state 89
    case       go to state 90


State 85

   12 stmt: DO stmt WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 91


State 86

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt  go to state 92
    expr  go to state 19


State 87

   19 case: CASE . expr ':' stmt_list BREAK ';'
   22     | CASE . expr ':' BREAK ';'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 24
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    '-'        shift, and go to state 14
    '('        shift, and go to state 16

    expr  go to state 93


State 88

   20 case: DEFAULT . ':' stmt_list BREAK ';'
   21     | DEFAULT . ':' stmt_list
   23     | DEFAULT . ':' BREAK ';'

    ':'  shift, and go to state 94


State 89

   14 stmt: SWITCH '(' expr ')' '{' case_list . '}'
   18 case_list: case_list . case

    CASE     shift, and go to state 87
    DEFAULT  shift, and go to state 88
    '}'      shift, and go to state 95

    case  go to state 96


State 90

   17 case_list: case .

    $default  reduce using rule 17 (case_list)


State 91

   12 stmt: DO stmt WHILE '(' expr ')' ';' .

    $default  reduce using rule 12 (stmt)


State 92

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)


State 93

   19 case: CASE expr . ':' stmt_list BREAK ';'
   22     | CASE expr . ':' BREAK ';'
   28 expr: expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . GE expr
   36     | expr . LE expr
   37     | expr . NE expr
   38     | expr . EQ expr
   39     | expr . INCREMENT
   40     | expr . DECREMENT
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr

    INCREMENT   shift, and go to state 33
    DECREMENT   shift, and go to state 34
    ADD_ASSIGN  shift, and go to state 35
    SUB_ASSIGN  shift, and go to state 36
    MUL_ASSIGN  shift, and go to state 37
    DIV_ASSIGN  shift, and go to state 38
    GE          shift, and go to state 39
    LE          shift, and go to state 40
    EQ          shift, and go to state 41
    NE          shift, and go to state 42
    '>'         shift, and go to state 43
    '<'         shift, and go to state 44
    '+'         shift, and go to state 45
    '-'         shift, and go to state 46
    '*'         shift, and go to state 47
    '/'         shift, and go to state 48
    '%'         shift, and go to state 49
    ':'         shift, and go to state 97


State 94

   20 case: DEFAULT ':' . stmt_list BREAK ';'
   21     | DEFAULT ':' . stmt_list
   23     | DEFAULT ':' . BREAK ';'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 98
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt       go to state 31
    stmt_list  go to state 99
    expr       go to state 19


State 95

   14 stmt: SWITCH '(' expr ')' '{' case_list '}' .

    $default  reduce using rule 14 (stmt)


State 96

   18 case_list: case_list case .

    $default  reduce using rule 18 (case_list)


State 97

   19 case: CASE expr ':' . stmt_list BREAK ';'
   22     | CASE expr ':' . BREAK ';'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 100
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt       go to state 31
    stmt_list  go to state 101
    expr       go to state 19


State 98

   23 case: DEFAULT ':' BREAK . ';'

    ';'  shift, and go to state 102


State 99

   16 stmt_list: stmt_list . stmt
   20 case: DEFAULT ':' stmt_list . BREAK ';'
   21     | DEFAULT ':' stmt_list .

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 103
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    $default  reduce using rule 21 (case)

    stmt  go to state 59
    expr  go to state 19


State 100

   22 case: CASE expr ':' BREAK . ';'

    ';'  shift, and go to state 104


State 101

   16 stmt_list: stmt_list . stmt
   19 case: CASE expr ':' stmt_list . BREAK ';'

    INTEGER    shift, and go to state 4
    FLOAT      shift, and go to state 5
    VARIABLE   shift, and go to state 6
    DO         shift, and go to state 7
    WHILE      shift, and go to state 8
    IF         shift, and go to state 9
    WRITELN    shift, and go to state 10
    INCREMENT  shift, and go to state 11
    DECREMENT  shift, and go to state 12
    SWITCH     shift, and go to state 13
    BREAK      shift, and go to state 105
    '-'        shift, and go to state 14
    ';'        shift, and go to state 15
    '('        shift, and go to state 16
    '{'        shift, and go to state 17

    stmt  go to state 59
    expr  go to state 19


State 102

   23 case: DEFAULT ':' BREAK ';' .

    $default  reduce using rule 23 (case)


State 103

   20 case: DEFAULT ':' stmt_list BREAK . ';'

    ';'  shift, and go to state 106


State 104

   22 case: CASE expr ':' BREAK ';' .

    $default  reduce using rule 22 (case)


State 105

   19 case: CASE expr ':' stmt_list BREAK . ';'

    ';'  shift, and go to state 107


State 106

   20 case: DEFAULT ':' stmt_list BREAK ';' .

    $default  reduce using rule 20 (case)


State 107

   19 case: CASE expr ':' stmt_list BREAK ';' .

    $default  reduce using rule 19 (case)
